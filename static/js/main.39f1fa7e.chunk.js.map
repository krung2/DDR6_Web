{"version":3,"sources":["assets/fonts/AppleSDGothicNeoM.ttf","libs/useStores.lib.ts","containers/Token.container.tsx","components/Header/Header.component.tsx","components/Modal/Modal.component.tsx","components/Nav/Nav.component.tsx","components/Main.component.tsx","components/User/User.component.tsx","libs/groupingState.lib.ts","libs/sweetAler.lib.ts","containers/Main.container.tsx","pages/Main.pages.tsx","App.tsx","reportWebVitals.ts","stores/Main/Main.repository.ts","stores/Main/MainStore.ts","stores/Token/Token.repository.ts","stores/Token/TokenStore.ts","stores/index.ts","index.tsx"],"names":["useStores","useContext","MobXProviderContext","TokenContainer","query","URLSearchParams","useLocation","search","handleToken","stores","TokenStore","request","useCallback","a","code","String","get","window","location","replace","token","console","log","localStorage","setItem","useEffect","HeaderComponent","className","ModalComponent","isRequest","setIsModalOpen","generationGroup","nameGroup","nickNameGroup","requestUser","setGeneration","nickName","setNickName","name","setName","onClick","onChange","e","target","value","selected","disabled","hidden","type","placeholder","NavComopnent","isLogin","checkGenerationGroup","modalOpenGroup","generationTypeArr","logout","checkGeneration","setCheckGeneration","map","generation","MainComponent","userInfo","isModalOpen","UserComponent","uplayId","userName","profileImage","level","rank","rankImage","wl","wins","losses","kd","open","src","alt","GroupingState","hookS","setHookS","nameSet","charAt","toUpperCase","slice","objData","Object","simpleAlert","title","subTitle","icon","requestFunction","Swal","fire","then","undefined","confirmAlert","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","result","Toast","toast","showConfirmButton","timer","timerProgressBar","position","width","background","showClass","popup","MainContainer","useState","setIsLoading","setIsLogin","setIsRequest","MainStore","users","hadleGetUser","handleAddUserNot","handleAddUser","removeItem","checkLogin","getItem","requestAddUser","sweetAlerLib","data","response","status","reload","filter","item","uniqueId","GlobalStyles","createGlobalStyle","require","MainPage","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reqBody","axios","post","DDR6_SERVER","headers","autobind","MainRepository","handleGetUser","runInAction","observable","action","TokenRepository","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.39f1fa7e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/AppleSDGothicNeoM.88c00162.ttf\";","import { MobXProviderContext } from \"mobx-react\"\nimport { useContext } from \"react\"\n\nexport const useStores = () => {\n\n  return useContext(MobXProviderContext);\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { useCallback, useEffect } from \"react\";\nimport { useLocation } from \"react-router\"\nimport { useStores } from \"../libs/useStores.lib\";\n\nexport const TokenContainer = (): JSX.Element => {\n\n  const useQuery = () => {\n\n    return new URLSearchParams(useLocation().search);\n  }\n  const query = useQuery();\n\n  const { stores } = useStores();\n  const {\n    handleToken,\n  } = stores.TokenStore;\n\n  const request = useCallback(async () => {\n\n    const code = String(query.get('code'));\n\n    if (code === null) {\n      window.location.replace('/');\n    }\n\n    try {\n      const token: string = await handleToken(code);\n\n      console.log(2);\n\n      await localStorage.setItem('access-token', token);\n\n      window.location.replace('/');\n\n\n    } catch (err) {\n      window.location.replace('/');\n    }\n\n    window.location.replace('/');\n  }, [])\n\n  useEffect(() => {\n    request()\n  }, [request])\n\n  return (\n    <>\n    </>\n  )\n}","import './Header.component.scss'\n\nexport const HeaderComponent = (): JSX.Element => {\n\n  return (\n    <div className='header'>\n      <div className='header-title'>\n        <div className='header-title-big'>\n          DDR6\n        </div>\n        <div className='header-title-small'>\n          Dgsw Dictionary R6S <br />\n          대구소프트웨어고등학교의 레인보우 식스 시즈 유저 정보를 기록합니다\n        </div>\n      </div>\n    </div>\n  )\n}","import { ChangeEvent, Dispatch, SetStateAction } from 'react';\nimport './Modal.component.scss';\n\ninterface ModalComponentProps {\n\n  isRequest: boolean;\n\n  setIsModalOpen: Dispatch<SetStateAction<boolean>>;\n\n  generationGroup: {\n    generation: string,\n    setGeneration: Dispatch<SetStateAction<string>>,\n  }\n\n  nameGroup: {\n    name: string,\n    setName: Dispatch<SetStateAction<string>>,\n  }\n\n\n  nickNameGroup: {\n    nickName: string,\n    setNickName: Dispatch<SetStateAction<string>>,\n  }\n\n  requestUser: () => void;\n}\n\nexport const ModalComponent = ({\n  isRequest,\n  setIsModalOpen,\n  generationGroup,\n  nameGroup,\n  nickNameGroup,\n  requestUser,\n}: ModalComponentProps): JSX.Element => {\n  const { setGeneration } = generationGroup;\n  const { nickName, setNickName } = nickNameGroup;\n  const { name, setName } = nameGroup;\n\n  return (\n    <>\n      <div className='modal' />\n\n      <div className='modal-container'>\n        <div className='modal-container-close' onClick={() => setIsModalOpen(false)}>\n          x\n        </div>\n\n        <div className='modal-container-dropbox'>\n          기수를 선택해주세요 <br />\n          <select className='modal-container-dropbox-box' onChange={(e) => setGeneration(e.target.value)}>\n            <option selected disabled hidden>기수를 선택해주세요</option>\n            {/* <option value='1기'>1기</option>\n            <option value='2기'>2기</option>\n            <option value='3기'>3기</option> */}\n            <option value='4기'>4기</option>\n            <option value='5기'>5기</option>\n            <option value='6기'>6기</option>\n          </select>\n        </div>\n\n        <div className='modal-container-dropbox'>\n          이름을 입력해주세요  <br />\n          <input type=\"text\" placeholder='이름을 입력해주세요' value={name} onChange={\n            (e: ChangeEvent<HTMLInputElement>) => setName(e.target.value)\n          } className='modal-container-dropbox-box'\n          />\n        </div>\n\n        <div className='modal-container-dropbox'>\n          닉네임을 입력해주세요  <br />\n          <input type=\"text\" placeholder='R6 닉네임이름을 입력해주세요' value={nickName} onChange={\n            (e: ChangeEvent<HTMLInputElement>) => setNickName(e.target.value)\n          } className='modal-container-dropbox-box'\n          />\n        </div>\n\n        <div className='modal-containter-button' onClick={() => requestUser()}>\n          {isRequest ? '전송중입니다' : '등록'}\n        </div>\n      </div>\n    </>\n  )\n}","import { Dispatch, SetStateAction } from 'react';\nimport { generationType } from '../../containers/Main.container';\nimport './Nav.comopnent.scss';\n\ninterface NavComopnentProps {\n\n  isLogin: boolean;\n\n  checkGenerationGroup: {\n    checkGeneration: generationType,\n    setCheckGeneration: Dispatch<SetStateAction<generationType>>,\n  }\n\n  modalOpenGroup: {\n    isModalOpen: boolean,\n    setIsModalOpen: Dispatch<SetStateAction<boolean>>,\n  }\n\n  generationTypeArr: generationType[];\n\n  logout: () => void;\n}\n\nexport const NavComopnent = ({\n  isLogin,\n  checkGenerationGroup,\n  modalOpenGroup,\n  generationTypeArr,\n  logout,\n}: NavComopnentProps): JSX.Element => {\n  const { setIsModalOpen } = modalOpenGroup;\n  const { checkGeneration, setCheckGeneration } = checkGenerationGroup;\n\n  // const url =\n  //   'http://dauth.b1nd.com/login?clientId=cd186f1597ce4365aa4067379ba91415fb75b926fb0b46bab1f247b4877cb9fb&redirectUrl=http://localhost:3000/redirect';\n\n  return (\n    <>\n      <div className='navButtons'>\n\n        {\n          generationTypeArr.map((generation: generationType) => {\n            return (\n              <div className={checkGeneration === generation ? \"navButtons-select\" : \"navButtons-filter\"} onClick={() => setCheckGeneration(generation)}>\n                {generation === 'all' ? '전체' : generation}\n              </div>\n            )\n          })\n        }\n\n        {/* {isLogin\n          ? <>\n            <div className='navButtons-login' onClick={() => logout()}>\n              로그아웃\n            </div>\n            <div className='navButtons-login' onClick={() => setIsModalOpen(true)} >\n              등록\n            </div>\n\n          </>\n          : <a href={url}>\n            <div className='navButtons-login'>\n              로그인\n            </div>\n\n          </a>\n        } */}\n\n        <div className='navButtons-login' onClick={() => setIsModalOpen(true)} >\n          등록\n        </div>\n\n      </div>\n\n      <div className='navContainer'>\n        <div className='navContainer-profile'>\n          프로필\n        </div>\n\n        <div className='navContainer-name'>\n          이름(기수)\n        </div>\n\n        <div className='navContainer-level'>\n          레벨\n        </div>\n\n        <div className='navContainer-rank'>\n          랭크\n        </div>\n\n        <div className='navContainer-KD'>\n          KD(킬/데스)\n        </div>\n\n        <div className='navContainer-WL'>\n          WL (승률)\n        </div>\n\n      </div>\n    </>\n  )\n}","import { Dispatch, SetStateAction } from \"react\"\nimport { generationType } from \"../containers/Main.container\";\nimport { HeaderComponent } from \"./Header/Header.component\"\nimport { ModalComponent } from \"./Modal/Modal.component\";\nimport { NavComopnent } from \"./Nav/Nav.component\"\n\ninterface MainComponentProps {\n\n  isLogin: boolean;\n  isRequest: boolean;\n\n  checkGenerationGroup: {\n    checkGeneration: generationType,\n    setCheckGeneration: Dispatch<SetStateAction<generationType>>,\n  }\n\n  modalOpenGroup: {\n    isModalOpen: boolean,\n    setIsModalOpen: Dispatch<SetStateAction<boolean>>,\n  }\n\n  generationGroup: {\n    generation: string,\n    setGeneration: Dispatch<SetStateAction<string>>,\n  }\n\n  nameGroup: {\n    name: string,\n    setName: Dispatch<SetStateAction<string>>,\n  }\n\n  nickNameGroup: {\n    nickName: string,\n    setNickName: Dispatch<SetStateAction<string>>,\n  }\n\n  userInfo: JSX.Element[];\n\n  generationTypeArr: generationType[]\n\n  requestUser: () => void;\n  logout: () => void;\n}\n\nexport const MainComponent = ({\n  isLogin,\n  isRequest,\n  checkGenerationGroup,\n  modalOpenGroup,\n  generationGroup,\n  nameGroup,\n  nickNameGroup,\n  userInfo,\n  generationTypeArr,\n  requestUser,\n  logout,\n}: MainComponentProps): JSX.Element => {\n  const { isModalOpen, setIsModalOpen } = modalOpenGroup;\n\n  return (\n    <>\n      {isModalOpen ? <ModalComponent\n        isRequest={isRequest}\n        setIsModalOpen={setIsModalOpen}\n        generationGroup={generationGroup}\n        nameGroup={nameGroup}\n        nickNameGroup={nickNameGroup}\n        requestUser={requestUser}\n      /> : null}\n      <HeaderComponent />\n      <NavComopnent\n        isLogin={isLogin}\n        checkGenerationGroup={checkGenerationGroup}\n        modalOpenGroup={modalOpenGroup}\n        generationTypeArr={generationTypeArr}\n        logout={logout}\n      />\n      {userInfo}\n    </>\n  )\n}","import './User.component.scss';\n\ninterface UserComponentProps {\n  uplayId: string\n  generation: string;\n  name: string;\n  userName: string;\n  profileImage: string;\n  level: number;\n  rank: string;\n  rankImage: string;\n  wl: number;\n  wins: number;\n  losses: number;\n  kd: number;\n}\n\nexport const UserComponent = ({\n  uplayId,\n  generation,\n  name,\n  userName,\n  profileImage,\n  level,\n  rank,\n  rankImage,\n  wl,\n  wins,\n  losses,\n  kd\n}: UserComponentProps) => {\n\n  return (\n    <div className='hover' >\n      <div className='userContainer' onClick={() => window.open(`https://r6stats.com/stats/${uplayId}`)}>\n        <div className='userContainer-img' >\n          <img src={profileImage} className='userCenter-profile' alt='profile' />\n        </div>\n\n        <div className='userContainer-name'>\n          {userName}\n        </div>\n\n        <div className='userContainer-generation' >\n          {name}({generation})\n      </div>\n\n        <div className='userContainer-level' >\n          Lv.{level}\n        </div>\n\n        <div className='userContainer-rank' >\n          <img src={rankImage} className='userContainer-rank-img' alt='rank' />\n        </div>\n\n        <div className='usercontainer-rank-text' >\n          {rank}\n        </div>\n\n        <div className='usercontainer-kd' >\n          KD : {kd}\n        </div>\n\n        <div className='usercontainer-con' >\n          <div className='usercontainer-con-graph'>\n            <div className='usercontainer-con-graph-okay' >\n              {wins}\n            </div>\n            <div className='usercontainer-con-graph-okay-loose'>\n              {losses}\n            </div>\n          </div>\n        </div>\n\n        <div>\n          {wl}%\n      </div>\n      </div>\n    </div>\n  )\n}","const GroupingState = (name: string, hookS: any, setHookS: (arg1: any) => void) => {\n\n  const nameSet = 'set' + (name.charAt(0).toUpperCase() + name.slice(1));\n\n  // eslint-disable-next-line no-new-object\n  const objData: any = new Object();\n\n  objData[`${name}`] = hookS;\n  objData[`${nameSet}`] = setHookS;\n\n  return objData;\n};\n\nexport default GroupingState;","import Swal, { SweetAlertResult, SweetAlertIcon } from 'sweetalert2';\nimport Toast from 'sweetalert2';\n\nclass SweetAlert {\n  public simpleAlert = (\n    title: string,\n    subTitle: string,\n    icon: SweetAlertIcon,\n    requestFunction?: any\n  ) => {\n    return Swal.fire(title, subTitle, icon).then(() => {\n      if (requestFunction !== undefined) {\n        requestFunction();\n      }\n    });\n  };\n\n  public confirmAlert = (\n    title: string,\n    subTitle: string,\n    icon: SweetAlertIcon,\n    requestFunction: any\n  ) => {\n    return Swal.fire({\n      title,\n      text: subTitle,\n      icon,\n      showCancelButton: true,\n      confirmButtonColor: '#3085d6',\n      cancelButtonColor: '#d33',\n      confirmButtonText: '확인',\n      cancelButtonText: '취소',\n    }).then((result: SweetAlertResult) => {\n      if (result.value) {\n        requestFunction();\n      }\n    });\n  };\n\n  public Toast = (\n    icon: SweetAlertIcon,\n    title: string\n    // requestFunction: any\n  ) => {\n    return Toast.fire({\n      icon,\n      title,\n      toast: true,\n      showConfirmButton: false,\n      timer: 4500,\n      timerProgressBar: false,\n      position: 'top-end',\n      width: 450,\n      background: '#fff',\n      showClass: {\n        popup: ''\n      }\n    });\n  };\n}\n\nexport default new SweetAlert();","/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { useCallback, useEffect, useState } from \"react\";\nimport { MainComponent } from \"../components/Main.component\"\nimport { UserComponent } from \"../components/User/User.component\";\nimport GroupingState from \"../libs/groupingState.lib\";\nimport sweetAlerLib from \"../libs/sweetAler.lib\";\nimport { useStores } from \"../libs/useStores.lib\"\nimport { DataEntity } from \"../stores/Main/MainStore\";\n\nexport type generationType = 'all' | '6기' | '5기' | '4기' | '3기' | '2기' | '1기';\n\nexport const MainContainer = (): JSX.Element => {\n\n  const generationTypeArr: generationType[] = ['all', '4기', '5기', '6기'];\n\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [isLogin, setIsLogin] = useState<boolean>(true);\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n  const [isRequest, setIsRequest] = useState<boolean>(false);\n\n  const [checkGeneration, setCheckGeneration] = useState<generationType>('all');\n  const [generation, setGeneration] = useState<string>();\n  const [name, setName] = useState<string>();\n  const [nickName, setNickName] = useState<string>();\n\n  const { stores } = useStores();\n  const {\n    users,\n    hadleGetUser,\n    handleAddUser,\n    handleAddUserNot,\n  } = stores.MainStore;\n\n  const logout: () => Promise<void> = useCallback(async () => {\n\n    await localStorage.removeItem('access-token');\n\n    setIsLogin(false);\n  }, [])\n\n  const checkLogin: () => Promise<void> = useCallback(async () => {\n\n    const token: string | null = await localStorage.getItem('access-token');\n\n    if (token === null) {\n\n      setIsLogin(false);\n      return;\n    }\n\n    setIsLogin(true);\n  }, [setIsLogin])\n\n  const requestAddUser: () => Promise<void> = useCallback(async () => {\n\n    // if (isRequest === true) {\n\n    //   return;\n    // }\n\n    // const token: string | null = await localStorage.getItem('access-token');\n\n    // if (token === null) {\n\n    //   sweetAlerLib.Toast('error', '토큰이 없습니다');\n    //   return;\n    // }\n\n    if (generation === undefined) {\n\n      sweetAlerLib.Toast('warning', '기수를 선택해주세요');\n      return;\n    }\n\n    if (name === undefined || name === '') {\n\n      sweetAlerLib.Toast('warning', '이름을 입력해주세요');\n      return;\n    }\n\n    if (nickName === undefined || nickName === '') {\n\n      sweetAlerLib.Toast('warning', '닉네임을 입력해주세요');\n      return;\n    }\n\n    // const data = {\n    //   generation,\n    //   userName: nickName,\n    // }\n\n    const data = {\n      generation,\n      name,\n      userName: nickName,\n    }\n\n    try {\n\n      setIsRequest(true);\n\n      // await handleAddUser(data, token);\n      await handleAddUserNot(data);\n\n      setIsRequest(false);\n    } catch (err) {\n\n      if (err.response) {\n\n        setIsRequest(false);\n\n        switch (err.response.status) {\n\n          case 401:\n            sweetAlerLib.Toast('warning', '로그인 후 다시 이용해주세요');\n            setIsModalOpen(true);\n            return;\n\n          case 403:\n            sweetAlerLib.Toast('warning', '이미 가입되어 있습니다');\n            setIsModalOpen(true);\n            return;\n\n          case 410:\n            sweetAlerLib.Toast('warning', '잘못된 닉네임입니다');\n            setIsModalOpen(true);\n            return;\n\n          default:\n            sweetAlerLib.Toast('warning', '서버 오류');\n            return;\n\n        }\n      } else {\n\n        sweetAlerLib.Toast('warning', '연결 오류');\n        return;\n\n      }\n    }\n\n    sweetAlerLib.Toast('success', '등록 성공');\n\n    setGeneration(undefined);\n    setNickName(undefined);\n    setName(undefined);\n    setIsModalOpen(false);\n\n    window.location.reload();\n\n  }, [generation, nickName, handleAddUserNot, name])\n\n  const request: () => Promise<void> = useCallback(async () => {\n\n    setIsLoading(true);\n\n    try {\n\n      await checkLogin();\n      await hadleGetUser();\n\n      setIsLoading(false);\n    } catch (err) {\n\n    }\n  }, [hadleGetUser, checkLogin])\n\n  useEffect(() => {\n    request();\n  }, [request])\n\n  const filterItem = (item: DataEntity) => {\n\n    if (checkGeneration === 'all') {\n\n      return true;\n    }\n\n    if (checkGeneration === item.generation) {\n\n      return true;\n    }\n\n    return false;\n  }\n\n  const userInfo: JSX.Element[] = users\n    .filter(filterItem)\n    .map((data: DataEntity) => {\n      const {\n        uniqueId,\n        uplayId,\n        generation,\n        name,\n        userName,\n        profileImage,\n        level,\n        rank,\n        rankImage,\n        wl,\n        wins,\n        losses,\n        kd\n      } = data;\n\n      return (\n        <UserComponent\n          key={uniqueId}\n          uplayId={uplayId}\n          generation={generation}\n          name={name}\n          userName={userName}\n          profileImage={profileImage}\n          level={level}\n          rank={rank}\n          rankImage={rankImage}\n          wl={wl}\n          wins={wins}\n          losses={losses}\n          kd={kd}\n        />\n      )\n    })\n\n  return (\n    <>\n      <MainComponent\n        isLogin={isLogin}\n        isRequest={isRequest}\n        checkGenerationGroup={GroupingState('checkGeneration', checkGeneration, setCheckGeneration)}\n        modalOpenGroup={GroupingState('isModalOpen', isModalOpen, setIsModalOpen)}\n        generationGroup={GroupingState('generation', generation, setGeneration)}\n        nameGroup={GroupingState('name', name, setName)}\n        nickNameGroup={GroupingState('nickName', nickName, setNickName)}\n        generationTypeArr={generationTypeArr}\n        userInfo={userInfo}\n        requestUser={requestAddUser}\n        logout={logout}\n      />\n    </>\n  )\n}","import { MainContainer } from \"../containers/Main.container\"\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyles = createGlobalStyle`\n  @font-face {\n    font-family:'AppleSDGothicNeoM';\n    src: url(${require('../assets/fonts/AppleSDGothicNeoM.ttf')});\n  }\n  body {\n    font-family: 'AppleSDGothicNeoM', sans-serif;\n  }\n`;\n\nexport const MainPage = (): JSX.Element => {\n\n  return (\n    <>\n      <GlobalStyles />\n      <MainContainer />\n    </>\n  )\n}","import React from 'react';\nimport { Route, Switch } from 'react-router';\nimport { TokenContainer } from './containers/Token.container';\nimport { MainPage } from './pages/Main.pages';\n\nfunction App() {\n  return (\n    <Switch >\n      <Route\n        exact\n        path='/'\n        render={() => <MainPage />}\n      />\n      <Route\n        exact\n        path='/redirect'\n        render={() => <TokenContainer />}\n      />\n    </Switch>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\nimport { IReqBody, IReqBodyNot, IUser } from \"./MainStore\";\nimport { DDR6_SERVER } from '../../config/config.json';\n\nclass MainRepository {\n\n  async handleAddUser(reqBody: IReqBody, token: string): Promise<void> {\n\n    try {\n\n      await axios.post(`${DDR6_SERVER}/user`, reqBody, {\n        headers: {\n          'access-token': token,\n        },\n      });\n\n    } catch (err) {\n\n      throw err;\n    }\n  }\n\n  async handleAddUserNot(reqBody: IReqBodyNot): Promise<void> {\n\n    try {\n\n      await axios.post(`${DDR6_SERVER}/user/not`, reqBody, {\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n        }\n      });\n\n    } catch (err) {\n\n      throw err;\n    }\n  }\n\n  async handleGetUser(): Promise<IUser> {\n\n    try {\n\n      const { data }: { data: IUser } = await axios.get(`${DDR6_SERVER}/user/all`, {\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n        }\n      });\n\n      return data;\n\n    } catch (err) {\n\n      throw err;\n    }\n  }\n}\n\nexport default new MainRepository();","import { autobind } from \"core-decorators\";\nimport { action, observable, runInAction } from \"mobx\";\nimport MainRepository from \"./Main.repository\";\n\nexport interface IUser {\n  status: number;\n  message: string;\n  data: (DataEntity)[];\n}\nexport interface DataEntity {\n  uniqueId: string;\n  uplayId: string;\n  generation: string;\n  name: string;\n  userName: string;\n  profileImage: string;\n  level: number;\n  rank: string;\n  rankImage: string;\n  wl: number;\n  wins: number;\n  losses: number;\n  kd: number;\n}\n\nexport interface IReqBody {\n\n  generation: string;\n  userName: string;\n}\n\nexport interface IReqBodyNot {\n\n  name: string;\n  generation: string;\n  userName: string;\n}\n\n@autobind()\nexport default class MainStore {\n\n  @observable users: DataEntity[] = [];\n\n  @action\n  async handleAddUser(reqBody: IReqBody, token: string) {\n\n    try {\n      await MainRepository.handleAddUser(reqBody, token);\n\n    } catch (err) {\n\n      throw err;\n    }\n  }\n\n  @action\n  async handleAddUserNot(reqBody: IReqBodyNot) {\n\n    try {\n      await MainRepository.handleAddUserNot(reqBody);\n\n    } catch (err) {\n\n      throw err;\n    }\n  }\n\n  @action\n  async hadleGetUser() {\n\n    try {\n\n      const { data }: { data: DataEntity[] } = await MainRepository.handleGetUser();\n\n      runInAction(() => {\n        this.users = data;\n      })\n    } catch (err) {\n\n      throw err;\n    }\n  }\n}\n\n","import axios from \"axios\";\nimport { DDR6_SERVER } from '../../config/config.json';\n\nclass TokenRepository {\n\n  async handleToken(code: string) {\n\n    try {\n\n      console.log(code);\n      const { data } = await axios.get(`${DDR6_SERVER}/token?code=${code}`)\n\n      console.log(2)\n      return data;\n    } catch (err) {\n\n      throw err;\n    }\n  }\n}\n\nexport default new TokenRepository();","import { autobind } from \"core-decorators\";\nimport { action } from \"mobx\";\nimport TokenRepository from \"./Token.repository\";\n\n\n@autobind()\nexport default class MainStore {\n\n  @action\n  async handleToken(code: string) {\n\n    try {\n\n      console.log(1);\n      const { data } = await TokenRepository.handleToken(code);\n\n      return data.token;\n    } catch (err) {\n\n      throw err;\n    }\n  }\n\n}\n\n","import MainStore from \"./Main/MainStore\";\nimport TokenStore from './Token/TokenStore'\n\nconst stores = {\n  MainStore: new MainStore(),\n  TokenStore: new TokenStore(),\n};\n\nexport default stores;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'mobx-react';\nimport stores from './stores';\n\nimport './styles/reset.scss';\n\nReactDOM.render(\n  <Provider stores={stores}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}